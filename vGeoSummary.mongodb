use('air_one_db_output');
db.geoSummary2.remove({geoElementType:'County'});
var geoElementType = 'County';
//var stateId = 'MA';

//default measure names
var measure1 = 'newCasesPer100K';
var measure2 = 'newCases7Days';
var measure3 = 'prevNewCasesPer100K';
var measure4 = 'newCasesPrev7Days';
var measure5 = 'kpi.colorRange';
var measure6 = 'kpi.prevColorRange';

//change measure names if geoElementType is 'State'
if(geoElementType == 'State')
{
  measure1 = 'stateNewCasesPer100K';
  measure2 = 'stateNewCases7Days';
  measure3 = 'statePrevNewCasesPer100K';
  measure4 = 'stateNewCasesPrev7Days';
}

//change measure names if geoElementType is 'City' and StateId is 'MA'
if(geoElementType == 'City' && stateId == 'MA')
{
  measure1 = 'massNewCasesPer100K';
  measure2 = 'massNewCases14Days';
  measure3 = 'massPrevNewCasesPer100K';
  measure4 = 'massNewCasesPrev14Days';
  measure5 = 'massColorRange';
  measure6 = 'massPrevColorRange';
}

db.preGeoSummary.aggregate([
{
    $match: {
      $and:[
      {geoElementType: geoElementType}//,
      //{stateId:'MA'}
      ]
    }
},
{
  $group: {
    _id: {
      name: '$name',
      stateId: '$stateId',
      geoElementType: '$geoElementType'
    }
  }
},
{
  $lookup: {
    'from': 'preGeoSummary',
    'let': {
      leftSideStateId: "$_id.stateId",
      leftSideName: "$_id.name",
      leftSideType: '$_id.geoElementType'
    },
    'pipeline': [
      {
          $addFields: {
          date: '$date'
       }
      },
      {
        $match: {
          $expr: {
            $and: [
              {
                $eq: [
                  "$name",
                  "$$leftSideName"
                ]
              },
              {
                $eq: [
                  "$stateId",
                  "$$leftSideStateId"
                ]
              },
              {
                $eq:[
                  '$geoElementType',
                  '$$leftSideType'
                ]
              }
            ]
          }
        }
      }
    ],
    as: 'records'
  }
},
{
  $sort:
    {'records.date': -1}
},
{  
    $project:{
        geoElementType: {'$arrayElemAt': ['$records.geoElementType', 0]},
        name: {'$arrayElemAt': ['$records.name', 0]},
        state: {'$arrayElemAt': ['$records.state', 0]},
        stateId: {'$arrayElemAt': ['$records.stateId', 0]},
        population: {'$arrayElemAt': ['$records.population', 0]},
        timestamp: '$$NOW',
        country: {'$arrayElemAt': ['$records.country', 0]},
        county: {'$arrayElemAt': ['$records.county', 0]},
        city: {'$arrayElemAt': ['$records.city', 0]},
        location: {
        'type': {
          '$literal': 'Point'
        }, 
        'coordinates': [
          {'$arrayElemAt': ['$records.long', 0]}, 
          {'$arrayElemAt': ['$records.lat', 0]}
        ],
        'valid': {
          '$cond': {
            'if': {
              '$and': [
                {
                  '$eq': [
                    {'$arrayElemAt': ['$records.long', 0]}, 0
                  ]
                }, {
                  '$eq': [
                    {'$arrayElemAt': ['$records.lat', 0]}, 0
                  ]
                }
              ]
            }, 
            'then': 0, 
            'else': 1
          }
        }
      },
      date: {
        '$arrayElemAt': ['$records.date', -1]
        },
      cases0: {
        '$arrayElemAt': ['$records.cases', -1]
        },
      prevCases0: {
        '$arrayElemAt': ['$records.cases', -3]
         },
      cases1: {
        '$arrayElemAt': ['$records.cases', -2]
        },
      prevCases1: {
        '$arrayElemAt': ['$records.cases', -4]
       },
      stateNewCasesPer100K: {
        '$arrayElemAt':['$records.newCasesPer100K', -1]
      },
      statePrevNewCasesPer100K: {
        '$arrayElemAt':['$records.newCasesPer100K', -2]
      },
      stateNewCases7Days: {
        '$arrayElemAt':['$records.newCases7Days', -1]
      },
      stateNewCasesPrev7Days: {
        '$arrayElemAt':['$records.newCases7Days', -2]
      },
      massColorRange:{
        '$arrayElemAt':['$records.massColorRange', -1]
      },
      massPrevColorRange:{
        '$arrayElemAt':['$records.massColorRange', -2]
      },
      massNewCasesPer100K: {
        '$arrayElemAt':['$records.massRate', -1]
      },
      massPrevNewCasesPer100K: {
        '$arrayElemAt':['$records.massRate', -2]
      },
      massNewCases14Days:{
        '$arrayElemAt':['$records.massConfirmedLast14Days', -1]
      },
      massNewCasesPrev14Days:{
        '$arrayElemAt':['$records.massConfirmedLast14Days', -2]
      }
    }   
},
{
  $addFields:{
    confirmedCases: '$cases0',
        'AQI': ' ', 
        'newCasesPer100K': {
          '$round': [
            {
              '$multiply': [
                100000, {
                  '$cond': {
                    'if': {
                      '$eq': [
                        '$population'  
                        , 0
                      ]
                    }, 
                    'then': 0.00001, 
                    'else': {
                      '$divide': [
                        {
                          '$subtract': [
                            '$cases0', '$prevCases0'
                          ]
                        },  
                        '$population'
                      ]
                    }
                  }
                }
              ]
            }, 0
          ]
        },
        'newCases7Days':{
          '$subtract': [
            '$cases0', '$prevCases0'
            ]
        },
        'prevNewCasesPer100K': {
          '$round': [
            {
              '$multiply': [
                100000, {
                  '$cond': {
                    'if': {
                      '$eq': [
                        '$population'  
                        , 0
                      ]
                    }, 
                    'then': 0.00001, 
                    'else': {
                      '$divide': [
                        {
                          '$subtract': [
                            '$cases1', '$prevCases1'
                          ]
                        },  
                        '$population'
                      ]
                    }
                  }
                }
              ]
            }, 0
          ]
        },
        'newCasesPrev7Days':{
          '$subtract': [
            '$cases1', '$prevCases1'
            ]
        }
  }
},
 {
   $addFields: {
      'kpi.AQI': '$AQI',
      'kpi.newCasesPer100K': '$' + measure1,
      'kpi.newCases7Days': '$' + measure2,
      'kpi.prevNewCasesPer100K': '$' + measure3,
      'kpi.newCasesPrev7Days': '$' + measure4
    }
}
,
{
  $addFields:{
    'kpi.colorRange': {
        '$switch': {
          'branches': [
            {
              'case': {
                '$lt': [
                  '$kpi.newCasesPer100K', 10
                ]
              }, 
              'then': 30
            }, {
              'case': {
                '$gt': [
                  '$kpi.newCasesPer100K', 100
                ]
              }, 
              'then': 160
            }
          ], 
          'default': 60
        }
      }, 
      'kpi.prevColorRange': {
        '$switch': {
          'branches': [
            {
              'case': {
                '$lt': [
                  '$kpi.prevNewCasesPer100K', 10
                ]
              }, 
              'then': 30
            }, {
              'case': {
                '$gt': [
                  '$kpi.prevNewCasesPer100K', 100
                ]
              }, 
              'then': 160
            }
          ], 
          'default': 60
        }
      }
  }
},
{
  $addFields: {
    'kpi.colorRange': '$' + measure5,
    'kpi.prevColorRange': '$' + measure6
    }
},
{
  $project:{
    _id:0,
    confirmedCases:1,
    geoElementType: 1,
    name: 1,
    stateId: 1,
    population: 1,
    state: 1,
    timestamp: 1,
    country: 1,
    county: 1,
    city: 1,
    location: 1,
    date:1,
    'kpi.AQI': 1,
    'kpi.colorRange': 1,
    'kpi.prevColorRange': 1,
    'kpi.newCasesPer100K' : 1,
    'kpi.prevNewCasesPer100K' : 1,
    'kpi.newCases7Days': 1,
    'kpi.newCasesPrev7Days': 1,
    'kpi.recentChangeFlag':{
      '$cond': {
        'if': {
          '$eq': [
            '$kpi.colorRange',
            '$kpi.prevColorRange'
            ]
            },
            'then': 0,
            'else': 1
            }
    }
  }
 },
{
  '$merge': {
    'into': {
      'db': 'air_one_db_output', 
      'coll': 'geoSummary2'
      }
    }
}
])    